#!/usr/bin/env python3

import importlib

def getimports(mod):
    try:
        names = mod.__all__
    except AttributeError:
        names = [name for name in dir(mod) if not name.startswith('_')]
    return {name: (mod.__name__, name) for name in names}

def merge(d, d2):
    for name, value in d2.items():
        values = d.get(name, [])
        values.append(value)
        d[name] = values

if __name__ == '__main__':
    import shelve

    with shelve.open('names', 'n') as db:
        for modname in (
            # TODO: This was autogenerated from 3.7 stdlib docs, then edited;
            # make that manual editing unnecessary.
            'string', 're', 'difflib', 'textwrap', 'unicodedata',
            'stringprep', 'readline', 'rlcompleter',
            'struct', 'codecs',
            'datetime', 'calendar', 'collections', 'collections.abc',
            'heapq', 'bisect', 'array', 'weakref', 'types', 'copy',
            'pprint', 'reprlib', 'enum',
            'numbers', 'math', 'cmath', 'decimal', 'fractions',
            'random', 'statistics',
            'itertools', 'functools', 'operator',
            'pathlib', 'os.path', 'fileinput', 'stat', 'filecmp',
            'tempfile', 'glob', 'fnmatch', 'linecache', 'shutil', 'macpath',
            'pickle', 'copyreg', 'shelve', 'marshal', 'dbm', 'sqlite3',
            'zlib', 'gzip', 'bz2', 'lzma', 'zipfile', 'tarfile',
            'csv', 'configparser', 'netrc', 'xdrlib', 'plistlib',
            'hashlib', 'hmac', 'secrets',
            'os', 'io', 'time', 'argparse', 'getopt',
            'logging', 'logging.config', 'logging.handlers',
            'getpass',
            'curses', 'curses.textpad', 'curses.ascii', 'curses.panel',
            'platform', 'errno', 'ctypes',
            'threading', 'multiprocessing', 'concurrent.futures', 'concurrent',
            'subprocess', 'sched', 'queue', '_thread',
            'contextvars',
            'socket', 'ssl', 'select', 'selectors', 'asyncio',
            'asyncore', 'asynchat', 'signal', 'mmap',
            'email', 'json', 'mailcap', 'mailbox', 'mimetypes',
            'base64', 'binhex', 'binascii', 'quopri', 'uu',
            'html', 'html.parser', 'html.entities',
            'xml.etree.ElementTree', 'xml.etree',
            'xml.dom.minidom', 'xml.dom.pulldom', 'xml.dom',
            'xml.sax.handler', 'xml.sax.saxutils',
            'xml.sax.xmlreader', 'xml.sax',
            'xml.parsers.expat', 'xml.parsers',
            'webbrowser', 'cgi', 'cgitb', 'wsgiref',
            'urllib.request', 'urllib.response', 'urllib.parse',
            'urllib.error', 'urllib',
            'http.client', 
            'ftplib', 'poplib', 'imaplib', 'nntplib', 'smtpd', 'telnetlib',
            'uuid', 'socketserver',
            'http.server', 'http.cookies', 'http.cookiejar', 'http',
            'xmlrpc.client', 'xmlrpc.server', 'xmlrpc',
            'ipaddress',
            'audioop', 'aifc', 'sunau', 'wave', 'chunk', 'colorsys',
            'imghdr', 'sndhdr', 'ossaudiodev',
            'gettext', 'locale',
            'turtle', 'cmd', 'shlex',
            'tkinter.ttk', 'tkinter.tix', 'tkinter.scrolledtext', 'tkinter',
            'idlelib',
            'typing', 'pydoc', 'doctest', 'unittest.mock', 'unittest',
            'lib2to3', 'test.support.script_helper', 'test.support', 'test',
            'bdb', 'faulthandler', 'pdb', 'cProfile', 'profile',
            'timeit', 'trace', 'tracemalloc',
            'distutils', 'ensurepip', 'venv', 'zipapp',
            'sys', 'sysconfig', 'builtins', 'warnings', 'dataclasses',
            'contextlib', 'abc', 'atexit', 'traceback', 'gc', 'inspect', 'site',
            'code', 'codeop',
            'zipimport', 'pkgutil', 'modulefinder', 'runpy',
            'importlib.abc', 'importlib.resources', 'importlib.machinery',
            'importlib.util', 'importlib',
            'parser', 'ast', 'symtable', 'symbol', 'token', 'keyword',
            'tokenize', 'tabnanny', 'pyclbr', 'py_compile', 'compileall',
            'dis', 'pickletools',
            'formatter',
            'msilib', 'msvcrt', 'winreg', 'winsound',
            'posix', 'pwd', 'spwd', 'grp', 'crypt', 'termios', 'tty', 'pty',
            'fcntl', 'pipes', 'resource', 'nis', 'syslog',
            'optparse', 'imp',
            'setuptools',
        ):
            try:
                mod = importlib.import_module(modname)
                d = getimports(mod)
                merge(db, d)
            except Exception as e:
                print(f'{modname}: {e!r}')
        if 'ElementTree' in db:
            db['ETree'] = db['ET'] = db['ElementTree'] = db['ElementTree'][1:]

